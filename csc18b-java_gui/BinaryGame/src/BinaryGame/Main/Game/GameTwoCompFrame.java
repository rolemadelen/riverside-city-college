/*
 * CSC 18B 42029 - Java Programming
 * Individual Project: Binary Game
 *
 * File name: GameTwoCompFrame.java
 * Coded by : Jiwon Yoo
 */

package BinaryGame.Main.Game;

import BinaryGame.Main.*;
import java.awt.Color;
import java.awt.event.KeyEvent;

/**
 *
 * @author Jiwon
 */
public class GameTwoCompFrame extends javax.swing.JFrame {
    private static GameModeFrame gmFrame = new GameModeFrame();
    private int turn = 1; /* 1 = player1, 2 = player2, 3 = player3*/
    private boolean game_on = true;

    // record each player's points
    private int[] player_points = {0, 0, 0};
    
    /**
     * Creates new form GameScreenFrame
     */
    public GameTwoCompFrame() {
        initComponents();
    }

    /* set binaryText string */
    public void setBinaryText(String str) {
        binaryText.setText(str);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        quitDialog = new javax.swing.JDialog();
        quitPanel = new javax.swing.JPanel();
        quitButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        textLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        playerAnswerTextField = new javax.swing.JTextField();
        binaryText = new javax.swing.JLabel();
        convertThisLabel = new javax.swing.JLabel();
        p1PointsLabel = new javax.swing.JLabel();
        p2PointsLabel = new javax.swing.JLabel();
        p3PointsLabel = new javax.swing.JLabel();
        correctWrongP1 = new javax.swing.JLabel();
        correctWrongP2 = new javax.swing.JLabel();
        correctWrongP3 = new javax.swing.JLabel();
        gridPanel = new javax.swing.JPanel();
        p1Character = new javax.swing.JLabel();
        p2Character = new javax.swing.JLabel();
        p2Character1 = new javax.swing.JLabel();
        p1Label = new javax.swing.JLabel();
        p2Label = new javax.swing.JLabel();
        quitIntro = new javax.swing.JLabel();
        p3Label = new javax.swing.JLabel();

        quitDialog.setTitle("Binary Game: Exit");
        quitDialog.setMinimumSize(new java.awt.Dimension(490, 290));
        quitDialog.setUndecorated(true);
        quitDialog.setPreferredSize(new java.awt.Dimension(490, 290));
        quitDialog.setResizable(false);
        quitDialog.getContentPane().setLayout(null);

        quitPanel.setBackground(java.awt.Color.black);
        quitPanel.setLayout(null);

        quitButton.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        quitButton.setForeground(java.awt.Color.red);
        quitButton.setText("OK");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });
        quitPanel.add(quitButton);
        quitButton.setBounds(60, 210, 110, 40);

        cancelButton.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(1, 144, 1));
        cancelButton.setText("CANCEL");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        quitPanel.add(cancelButton);
        cancelButton.setBounds(290, 210, 130, 40);

        textLabel.setBackground(java.awt.Color.black);
        textLabel.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        textLabel.setForeground(java.awt.Color.green);
        textLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        textLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/game/areYouSure.png"))); // NOI18N
        textLabel.setName(""); // NOI18N
        quitPanel.add(textLabel);
        textLabel.setBounds(40, 10, 410, 80);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(1, 209, 55));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Select OK to return to the Main Menu.");
        jLabel1.setToolTipText("");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        quitPanel.add(jLabel1);
        jLabel1.setBounds(50, 90, 370, 30);

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(1, 209, 55));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Your game progress will be lost.");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        quitPanel.add(jLabel2);
        jLabel2.setBounds(100, 120, 270, 50);

        quitDialog.getContentPane().add(quitPanel);
        quitPanel.setBounds(0, 0, 490, 290);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Binary Game");
        setMinimumSize(new java.awt.Dimension(800, 700));
        setUndecorated(true);
        setResizable(false);

        panel.setBackground(new java.awt.Color(0, 0, 0));
        panel.setEnabled(false);
        panel.setMinimumSize(new java.awt.Dimension(800, 700));
        panel.setPreferredSize(new java.awt.Dimension(800, 700));
        panel.setLayout(null);

        playerAnswerTextField.setBackground(java.awt.Color.black);
        playerAnswerTextField.setForeground(java.awt.Color.green);
        playerAnswerTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        playerAnswerTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                playerAnswerTextFieldKeyPressed(evt);
            }
        });
        panel.add(playerAnswerTextField);
        playerAnswerTextField.setBounds(55, 350, 160, 30);

        binaryText.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        binaryText.setForeground(java.awt.Color.green);
        binaryText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        binaryText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(100, 100, 100)));
        panel.add(binaryText);
        binaryText.setBounds(250, 60, 300, 90);

        convertThisLabel.setBackground(java.awt.Color.black);
        convertThisLabel.setForeground(java.awt.Color.white);
        convertThisLabel.setText("Convert this Binary !");
        panel.add(convertThisLabel);
        convertThisLabel.setBounds(260, 40, 140, 14);

        p1PointsLabel.setBackground(java.awt.Color.black);
        p1PointsLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        p1PointsLabel.setForeground(java.awt.Color.red);
        p1PointsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p1PointsLabel.setText("0");
        panel.add(p1PointsLabel);
        p1PointsLabel.setBounds(77, 550, 110, 30);

        p2PointsLabel.setBackground(java.awt.Color.black);
        p2PointsLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        p2PointsLabel.setForeground(java.awt.Color.red);
        p2PointsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p2PointsLabel.setText("0");
        panel.add(p2PointsLabel);
        p2PointsLabel.setBounds(345, 550, 110, 30);

        p3PointsLabel.setBackground(java.awt.Color.black);
        p3PointsLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        p3PointsLabel.setForeground(java.awt.Color.red);
        p3PointsLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p3PointsLabel.setText("0");
        panel.add(p3PointsLabel);
        p3PointsLabel.setBounds(610, 550, 110, 30);

        correctWrongP1.setBackground(java.awt.Color.black);
        correctWrongP1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        correctWrongP1.setForeground(java.awt.Color.green);
        correctWrongP1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correctWrongP1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        panel.add(correctWrongP1);
        correctWrongP1.setBounds(25, 210, 220, 180);

        correctWrongP2.setBackground(java.awt.Color.black);
        correctWrongP2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        correctWrongP2.setForeground(java.awt.Color.green);
        correctWrongP2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correctWrongP2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        panel.add(correctWrongP2);
        correctWrongP2.setBounds(290, 210, 220, 180);

        correctWrongP3.setBackground(java.awt.Color.black);
        correctWrongP3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        correctWrongP3.setForeground(java.awt.Color.green);
        correctWrongP3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        correctWrongP3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        panel.add(correctWrongP3);
        correctWrongP3.setBounds(555, 210, 220, 180);

        gridPanel.setBackground(java.awt.Color.black);
        gridPanel.setLayout(new java.awt.GridLayout(1, 0));

        p1Character.setBackground(java.awt.Color.black);
        p1Character.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        p1Character.setForeground(java.awt.Color.red);
        p1Character.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p1Character.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/game/p1.png"))); // NOI18N
        p1Character.setToolTipText("");
        p1Character.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        p1Character.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white));
        gridPanel.add(p1Character);

        p2Character.setBackground(java.awt.Color.black);
        p2Character.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        p2Character.setForeground(java.awt.Color.red);
        p2Character.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p2Character.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/game/p1.png"))); // NOI18N
        p2Character.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        p2Character.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white));
        gridPanel.add(p2Character);

        p2Character1.setBackground(java.awt.Color.black);
        p2Character1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        p2Character1.setForeground(java.awt.Color.red);
        p2Character1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p2Character1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/game/p1.png"))); // NOI18N
        p2Character1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        p2Character1.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.white));
        gridPanel.add(p2Character1);

        panel.add(gridPanel);
        gridPanel.setBounds(0, 280, 800, 380);

        p1Label.setBackground(java.awt.Color.black);
        p1Label.setForeground(java.awt.Color.white);
        p1Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p1Label.setText("Player 1");
        panel.add(p1Label);
        p1Label.setBounds(70, 670, 120, 14);

        p2Label.setBackground(java.awt.Color.black);
        p2Label.setForeground(java.awt.Color.white);
        p2Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p2Label.setText("Player 2");
        panel.add(p2Label);
        p2Label.setBounds(340, 670, 120, 14);

        quitIntro.setBackground(java.awt.Color.black);
        quitIntro.setForeground(java.awt.Color.red);
        quitIntro.setText("* press ESC to quit");
        panel.add(quitIntro);
        quitIntro.setBounds(460, 160, 150, 14);

        p3Label.setBackground(java.awt.Color.black);
        p3Label.setForeground(java.awt.Color.white);
        p3Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        p3Label.setText("Player 3");
        panel.add(p3Label);
        p3Label.setBounds(610, 670, 120, 14);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void playerAnswerTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_playerAnswerTextFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            quitDialog.setVisible(true);
            quitDialog.setLocationRelativeTo(null);
         }
         
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {

         // if input is not an integer, empty the text field
         if(!playerAnswerTextField.getText().matches("^[0-9]*$"))
             playerAnswerTextField.setText("");
         // if input is not empty
         else if(!playerAnswerTextField.getText().isEmpty()) {
            switch(turn) {
                case 1: 
                    //if p1 answer is right, get points
                    if(gmFrame.checkAnswer(playerAnswerTextField.getText())) {
                      player_points[0] += 15;
                      correctWrongP1.setText("CORRECT !!");
                      correctWrongP1.setForeground(Color.blue);
                      correctWrongP2.setText("");
                      Option.soundEffect("src/sound/correct.wav");
                  } else { 
                      player_points[0] -= 10;
                      correctWrongP1.setText("WRONG !!");
                      correctWrongP1.setForeground(Color.red);
                      correctWrongP2.setText("");
                      Option.soundEffect("src/sound/wrong.wav");
                      gmFrame.wrong();
                  }
                    p1PointsLabel.setText(Integer.toString(player_points[0]));
                    playerAnswerTextField.setBounds(320, 350, 160, 30);
                    turn = 2;
                    break;
                case 2:
                     //if p2 answer is right, get points
                    if(gmFrame.checkAnswer(playerAnswerTextField.getText())) {
                        player_points[1] += 15;
                        correctWrongP2.setText("CORRECT !!");
                        correctWrongP2.setForeground(Color.blue);
                        correctWrongP3.setText("");
                        Option.soundEffect("src/sound/correct.wav");
                    } else { 
                        player_points[1] -= 10;
                        correctWrongP2.setText("WRONG !!");
                        correctWrongP2.setForeground(Color.red);
                        correctWrongP3.setText("");
                        Option.soundEffect("src/sound/wrong.wav");
                        gmFrame.wrong();
                    }

                  p2PointsLabel.setText(Integer.toString(player_points[1]));
                  playerAnswerTextField.setBounds(585, 350, 160, 30);
                  turn = 3;
                    break;
                case 3:
                    //if p3 answer is right, get points
                    if(gmFrame.checkAnswer(playerAnswerTextField.getText())) {
                        player_points[2] += 15;
                        correctWrongP3.setText("CORRECT !!");
                        correctWrongP3.setForeground(Color.blue);
                        correctWrongP1.setText("");
                        Option.soundEffect("src/sound/correct.wav");
                    } else { 
                        player_points[2] -= 10;
                        correctWrongP3.setText("WRONG !!");
                        correctWrongP3.setForeground(Color.red);
                        correctWrongP1.setText("");
                        Option.soundEffect("src/sound/wrong.wav");
                        gmFrame.wrong();
                    }

                  p3PointsLabel.setText(Integer.toString(player_points[2]));
                  playerAnswerTextField.setBounds(55, 350, 160, 30);
                  turn = 1;
                    break;
            }
            playerAnswerTextField.setText("");
         }
        }
    }//GEN-LAST:event_playerAnswerTextFieldKeyPressed

    public int getTurn() {
        return turn;
    }
    
//    public void setTurn(int turn) {
//        if(turn == 1) {
//            player_points[2] -= 5;
//            correctWrongP3.setText("TIME'S UP !!");
//            correctWrongP3.setForeground(Color.red);
//            p3PointsLabel.setText(Integer.toString(player_points[2]));
//            playerAnswerTextField.setBounds(55, 350, 160, 30);
//            correctWrongP1.setText("");
//            if(game_on)
//                Option.soundEffect("src/sound/timesUp.wav");
//        } else if(turn == 2) {
//            player_points[0] -= 5;
//            correctWrongP1.setText("TIME'S UP !!");
//            correctWrongP1.setForeground(Color.red);
//            p1PointsLabel.setText(Integer.toString(player_points[0]));
//            playerAnswerTextField.setBounds(320, 350, 160, 30);
//            correctWrongP2.setText("");
//            if(game_on)
//                Option.soundEffect("src/sound/timesUp.wav");
//        } else {
//            player_points[1] -= 5;
//            correctWrongP2.setText("TIME'S UP !!");
//            correctWrongP2.setForeground(Color.red);
//            p2PointsLabel.setText(Integer.toString(player_points[1]));
//            playerAnswerTextField.setBounds(585, 350, 160, 30);
//            correctWrongP3.setText("");
//            if(game_on)
//                Option.soundEffect("src/sound/timesUp.wav");
//        }
//        playerAnswerTextField.setText("");
//        this.turn = turn;
//    }
    
    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        quitDialog.setVisible(false);
        this.setVisible(false);
        gmFrame.stopThread();
        game_on = false;
        
        PlayMenuFrame screen = new PlayMenuFrame();
        screen.setVisible(true);
    }//GEN-LAST:event_quitButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        quitDialog.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel binaryText;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel convertThisLabel;
    private javax.swing.JLabel correctWrongP1;
    private javax.swing.JLabel correctWrongP2;
    private javax.swing.JLabel correctWrongP3;
    private javax.swing.JPanel gridPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel p1Character;
    private javax.swing.JLabel p1Label;
    private javax.swing.JLabel p1PointsLabel;
    private javax.swing.JLabel p2Character;
    private javax.swing.JLabel p2Character1;
    private javax.swing.JLabel p2Label;
    private javax.swing.JLabel p2PointsLabel;
    private javax.swing.JLabel p3Label;
    private javax.swing.JLabel p3PointsLabel;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField playerAnswerTextField;
    private javax.swing.JButton quitButton;
    private javax.swing.JDialog quitDialog;
    private javax.swing.JLabel quitIntro;
    private javax.swing.JPanel quitPanel;
    private javax.swing.JLabel textLabel;
    // End of variables declaration//GEN-END:variables
}
