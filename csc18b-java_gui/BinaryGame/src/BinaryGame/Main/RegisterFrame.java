/*
 * CSC 18B 42029 - Java Programming
 * Individual Project: Binary Game
 *
 * File name: RegisterFrame.java
 * Coded by : Jiwon Yoo
 */

package BinaryGame.Main;

import java.awt.*;
import java.util.regex.*;
import BinaryGame.Database.*;

/**
 *
 * @author astraea
 */
public class RegisterFrame extends javax.swing.JFrame {
    // vars used for regex test
    private Matcher m, m2;
    private Pattern r, r2;
    
    //username regex pattern: should contain at least 1 letter and number
    private static final String usernamePattern = "^(?=.*[a-zA-Z])(?=.*[0-9]).{8,35}$";
    //password regex pattern: should contain at least 1 lettor and number
    private static final String pwPattern = "^((?=.*[0-9])(?=.*[a-zA-Z]).{8,35})$";
    
    /**
     * Creates new form Register
     */
    public RegisterFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        username = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        pwConfirm = new javax.swing.JPasswordField();
        registerButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        credit = new javax.swing.JLabel();
        requirments = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        loginFormLabel = new javax.swing.JLabel();
        bg1 = new javax.swing.JLabel();
        bg2 = new javax.swing.JLabel();
        bg3 = new javax.swing.JLabel();
        bg4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Binary Game");
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(800, 700));
        setName(""); // NOI18N
        setUndecorated(true);

        panel.setBackground(new java.awt.Color(0, 0, 0));
        panel.setMinimumSize(new java.awt.Dimension(800, 700));
        panel.setPreferredSize(new java.awt.Dimension(800, 700));
        panel.setLayout(null);

        username.setBackground(new java.awt.Color(23, 23, 23));
        username.setForeground(new java.awt.Color(2, 151, 2));
        username.setText("username");
        username.setBorder(null);
        username.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usernameMouseClicked(evt);
            }
        });
        panel.add(username);
        username.setBounds(340, 240, 170, 20);

        password.setBackground(new java.awt.Color(23, 23, 23));
        password.setForeground(new java.awt.Color(2, 151, 2));
        password.setText("root");
        password.setBorder(null);
        password.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordFocusGained(evt);
            }
        });
        panel.add(password);
        password.setBounds(340, 290, 170, 30);

        pwConfirm.setBackground(new java.awt.Color(23, 23, 23));
        pwConfirm.setForeground(new java.awt.Color(2, 151, 2));
        pwConfirm.setText("root");
        pwConfirm.setBorder(null);
        panel.add(pwConfirm);
        pwConfirm.setBounds(340, 350, 170, 20);

        registerButton.setBackground(new java.awt.Color(21, 21, 21));
        registerButton.setFont(new java.awt.Font("Ubuntu Medium", 0, 14)); // NOI18N
        registerButton.setForeground(java.awt.Color.white);
        registerButton.setText("Register");
        registerButton.setBorder(null);
        registerButton.setFocusPainted(false);
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });
        panel.add(registerButton);
        registerButton.setBounds(280, 480, 110, 40);

        backButton.setBackground(new java.awt.Color(21, 21, 21));
        backButton.setFont(new java.awt.Font("Ubuntu Medium", 0, 14)); // NOI18N
        backButton.setForeground(java.awt.Color.white);
        backButton.setText("Back");
        backButton.setBorder(null);
        backButton.setFocusPainted(false);
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        panel.add(backButton);
        backButton.setBounds(420, 480, 110, 40);

        credit.setForeground(new java.awt.Color(51, 51, 51));
        credit.setText("Jiwon Yoo");
        panel.add(credit);
        credit.setBounds(10, 680, 90, 20);

        requirments.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/register/requirements.png"))); // NOI18N
        panel.add(requirments);
        requirments.setBounds(290, 390, 220, 70);

        title.setFont(new java.awt.Font("Ubuntu Medium", 0, 18)); // NOI18N
        title.setForeground(new java.awt.Color(255, 255, 255));
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Register New User");
        panel.add(title);
        title.setBounds(300, 170, 210, 24);

        loginFormLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/register/registerForm.png"))); // NOI18N
        panel.add(loginFormLabel);
        loginFormLabel.setBounds(250, 150, 300, 400);

        bg1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/main menu/matrix.gif"))); // NOI18N
        panel.add(bg1);
        bg1.setBounds(410, -10, 400, 440);

        bg2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/main menu/matrix.gif"))); // NOI18N
        panel.add(bg2);
        bg2.setBounds(0, -10, 400, 440);

        bg3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/main menu/matrix.gif"))); // NOI18N
        panel.add(bg3);
        bg3.setBounds(0, 290, 400, 440);

        bg4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/main menu/matrix.gif"))); // NOI18N
        panel.add(bg4);
        bg4.setBounds(410, 290, 400, 440);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /*
     * return to the previous screen when
     * back button is cilicked
     */
    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        LoginFrame login = new LoginFrame();
        this.setVisible(false);
        login.setVisible(true);
    }//GEN-LAST:event_backButtonActionPerformed

    /*
     * if register button is clicked,
     * perform regex test and (later on check the database: MySQL)
     * check if username and password is valid
     */
    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        String id = username.getText();
        String pw = ""; // password
        String pw2 = ""; // password confirm
        
        // since getPassword() returns char[] not String,
        char[] ch = password.getPassword(), 
                ch2 = pwConfirm.getPassword();
        
        // append each character to string
        for(int i = 0; i < ch.length; ++i) 
            pw += ("" + ch[i]);
        
        for(int i = 0; i < ch2.length; ++i) 
            pw2 += ("" + ch2[i]);
        
        // create a pattern object
        r = Pattern.compile(usernamePattern);
        r2 = Pattern.compile(pwPattern);
        
        // create a matcher object
        m = r.matcher(id);
        m2 = r2.matcher(pw);
        
        // if entered username and password is valid,
        // and (password == pwConfirm)
        // register new user (and add it to the database)
        // Then, return to the login screen
        if(m.find() && m2.find() && (pw.equals(pw2))) {              
            // after regex is passed
            // now check on database whether username is valid or not
            MySQLConnect db = new MySQLConnect();
            
            // if username is valid, finish registering, 
            // then return to the login screen
            if( db.isUsernameValid(id, pw) ) {
                LoginFrame login = new LoginFrame();
                this.setVisible(false);
                login.setVisible(true);   
                db.getTableData();
            } 
            // if invalid, alert the user
            else {
                username.setText("That username is taken...");
                username.setForeground(Color.RED);
            }
        }
        // alert the user by changing the font color for following reasons:
        // if two passwords are mismatched
        else if(!pw.equals(pw2)) {
            password.setForeground(Color.RED);
            pwConfirm.setForeground(Color.RED);
        }
        //if a password has failed the regex test
        else if(m2.find() == false) {
            password.setForeground(Color.RED);
            pwConfirm.setForeground(Color.RED);
        }
        // regex failed for username
        else {
            username.setForeground(Color.RED);
        }       
        
    }//GEN-LAST:event_registerButtonActionPerformed

    private void passwordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordFocusGained
        password.setText("");
        pwConfirm.setText("");
        password.setForeground(new Color(2,151,2));
        pwConfirm.setForeground(new Color(2, 151, 2));
    }//GEN-LAST:event_passwordFocusGained

    private void usernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameMouseClicked
        username.setText("");
        username.setForeground(new Color(2,151,2));
    }//GEN-LAST:event_usernameMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel bg1;
    private javax.swing.JLabel bg2;
    private javax.swing.JLabel bg3;
    private javax.swing.JLabel bg4;
    private javax.swing.JLabel credit;
    private javax.swing.JLabel loginFormLabel;
    private javax.swing.JPanel panel;
    private javax.swing.JPasswordField password;
    private javax.swing.JPasswordField pwConfirm;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel requirments;
    private javax.swing.JLabel title;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
